---
# Load images presets

- block:
    - name: search image presets
      local_action:
        module: find
        paths: "{{ role_path }}/defaults/images"
        patterns: "*.yml"
      register: docker_presets_search_images_result

    - name: load image presets
      local_action:
        module: include_vars
        file: "{{ file.path }}"
        name: docker_presets_image
      loop: "{{ docker_presets_search_images_result.files }}"
      loop_control:
        label: "{{ file.path | basename  }}"
        loop_var: file
      register: docker_presets_load_images_result

    - name: setup fact with images presets
      set_fact:
        docker_presets_images: >-
          {{ images
             | map("combine", extra_buildargs, recursive=true)
             | map("combine", http_proxy_buildargs, recursive=true)
             | map("combine", https_proxy_buildargs, recursive=true)
             | map("combine", no_proxy_buildargs, recursive=true)
             | list }}
      vars:
        images: >-
          {{ docker_presets_load_images_result.results
             | map(attribute="ansible_facts.docker_presets_image")
             | list }}

        http_proxy_buildargs: >-
          {{ (ansible_env.http_proxy | default('') | length > 0)
          | ternary({ "buildargs": { "http_proxy": ansible_env.http_proxy }},
                    {}) }}

        https_proxy_buildargs: >-
          {{ (ansible_env.https_proxy | default('') | length > 0)
          | ternary({ "buildargs": { "https_proxy": ansible_env.https_proxy }},
                    {}) }}

        no_proxy_buildargs: >-
          {{ (ansible_env.no_proxy | default('') | length > 0)
          | ternary({ "buildargs": { "no_proxy": ansible_env.no_proxy }},
                    {}) }}

        extra_buildargs:
          buildargs:
            user: "{{ docker_presets_user }}"
            password: "{{ docker_presets_password }}"

    - name: setup directories for dockerfiles
      file:
        path: "{{ item }}"
        state: directory
        mode: 0700
      loop: >-
        {{ docker_presets_images | map(attribute='path') | list | unique }}

    - name: setup dockerfiles
      copy:
        src: "files/{{ item.dockerfile | basename }}"
        dest: "{{ item.path }}"
        mode: 0600
      loop: "{{ docker_presets_images }}"
      loop_control:
        label: "{{ item.path }}/{{ item.dockerfile }}"
  tags:
    - role::docker_presets
    - role::docker_presets::images
